# apiVersion: networking.k8s.io/v1
# kind: Ingress
# metadata:
#   name: my-go-ingress
#   annotations:
#     nginx.ingress.kubernetes.io/ssl-redirect: "false"
#     nginx.ingress.kubernetes.io/use-regex: "true"
#     nginx.ingress.kubernetes.io/rewrite-target: /$2
# spec:
#   ingressClassName: nginx
#   rules:
#     - http:
#         paths:
#           - path: /go-micro
#             pathType: Prefix
#             backend:
#               service:
#                 name: front-end
#                 port:
#                   number: 8081
#           - path: /broker
#             pathType: Prefix
#             backend:
#               service:
#                 name: broker-service
#                 port:
#                   number: 8080
# ---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: my-website-ingress
  annotations:
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
    nginx.ingress.kubernetes.io/use-regex: "true"
    cert-manager.io/cluster-issuer: letsencrypt
    # nginx.ingress.kubernetes.io/rewrite-target: /$2
spec:
  ingressClassName: nginx
  tls:
    - hosts:
        - my-website-ingress.johnmichaelgeorge.com
      secretName: tls-secret
  rules:
    - host: my-website-ingress.johnmichaelgeorge.com
    - http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: website
                port:
                  number: 80
          - path: /go-micro
            pathType: Prefix
            backend:
              service:
                name: front-end
                port:
                  number: 8081
          - path: /broker
            pathType: Prefix
            backend:
              service:
                name: broker-service
                port:
                  number: 8080
